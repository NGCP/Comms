/* This file was autogenerated. All changes will be undone. */

/* Message: Vehicle_Ground_Relative_State, ID: 2005*/

#include <protonet_marshal.h>
#include <protonet_message.h>
#include <message/VehicleGroundRelativeState.h>

msg_offset pack_vehicle_ground_relative_state(
   vehicle_ground_relative_state_t* vehicle_ground_relative_state,
   msg_offset offset)
{
   offset = pack_float64_t(vehicle_ground_relative_state->timestamp,offset);
   offset = pack_uint16_t(vehicle_ground_relative_state->vehicle_ID,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->angle_of_attack,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->angle_of_sideslip,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->true_airspeed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->indicated_airspeed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->north_wind_speed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->east_wind_speed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->north_ground_speed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->east_ground_speed,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->barometric_pressure,offset);
   offset = pack_float32_t(vehicle_ground_relative_state->barometric_altitude,offset);
   return offset;
}

msg_offset unpack_vehicle_ground_relative_state(
   msg_offset offset,
   vehicle_ground_relative_state_t* out_ptr)
{
   offset = unpack_float64_t(offset, &out_ptr->timestamp);
   offset = unpack_uint16_t(offset, &out_ptr->vehicle_ID);
   offset = unpack_float32_t(offset, &out_ptr->angle_of_attack);
   offset = unpack_float32_t(offset, &out_ptr->angle_of_sideslip);
   offset = unpack_float32_t(offset, &out_ptr->true_airspeed);
   offset = unpack_float32_t(offset, &out_ptr->indicated_airspeed);
   offset = unpack_float32_t(offset, &out_ptr->north_wind_speed);
   offset = unpack_float32_t(offset, &out_ptr->east_wind_speed);
   offset = unpack_float32_t(offset, &out_ptr->north_ground_speed);
   offset = unpack_float32_t(offset, &out_ptr->east_ground_speed);
   offset = unpack_float32_t(offset, &out_ptr->barometric_pressure);
   offset = unpack_float32_t(offset, &out_ptr->barometric_altitude);
   return offset;
}

void encode_vehicle_ground_relative_state(
   uint8_t src_id,
   uint8_t dest_id,
   uint8_t msg_ttl,
   uint8_t seq_number,
   vehicle_ground_relative_state_t* tx_msg,
   proto_msg_t* msg)
{
   msg_offset start_offset, offset;
   msg->direction = Proto_Out;
   start_offset = msg->data;
   offset = msg->data;
   msg->header.node_src_id = src_id;
   msg->header.node_dest_id = dest_id;
   msg->header.message_ttl = msg_ttl;
   msg->header.sequence_number = seq_number;
   msg->header.message_length = 50;
   msg->header.message_type = Proto_Vehicle_Ground_Relative_State;
   offset = pack_sync(offset);
   offset = pack_header(&msg->header, offset);
   offset = pack_vehicle_ground_relative_state(tx_msg, offset);
   offset = pack_checksum(start_offset, offset);
   msg->tx_len = offset-start_offset;
}